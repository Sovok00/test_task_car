[2025-05-18T13:12:06.085+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2025-05-18T13:12:06.124+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: test_task_car.process_file manual__2025-05-18T13:12:00.431825+00:00 [queued]>
[2025-05-18T13:12:06.158+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: test_task_car.process_file manual__2025-05-18T13:12:00.431825+00:00 [queued]>
[2025-05-18T13:12:06.162+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 2
[2025-05-18T13:12:06.229+0000] {taskinstance.py:2889} INFO - Executing <Task(PythonOperator): process_file> on 2025-05-18 13:12:00.431825+00:00
[2025-05-18T13:12:06.254+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=2047) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2025-05-18T13:12:06.261+0000] {standard_task_runner.py:72} INFO - Started process 2049 to run task
[2025-05-18T13:12:06.261+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'test_task_car', 'process_file', 'manual__2025-05-18T13:12:00.431825+00:00', '--job-id', '19', '--raw', '--subdir', 'DAGS_FOLDER/test_car.py', '--cfg-path', '/tmp/tmphftow9lg']
[2025-05-18T13:12:06.267+0000] {standard_task_runner.py:105} INFO - Job 19: Subtask process_file
[2025-05-18T13:12:06.432+0000] {task_command.py:467} INFO - Running <TaskInstance: test_task_car.process_file manual__2025-05-18T13:12:00.431825+00:00 [running]> on host 1f5d5888f00f
[2025-05-18T13:12:06.718+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='test_task_car' AIRFLOW_CTX_TASK_ID='process_file' AIRFLOW_CTX_EXECUTION_DATE='2025-05-18T13:12:00.431825+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-05-18T13:12:00.431825+00:00'
[2025-05-18T13:12:06.725+0000] {taskinstance.py:731} INFO - ::endgroup::
[2025-05-18T13:12:06.775+0000] {test_car.py:35} INFO - >>> [START] process_file
[2025-05-18T13:12:06.778+0000] {test_car.py:38} INFO - Execution date: 2025-05-18 13:12:00.431825+00:00
[2025-05-18T13:12:06.872+0000] {base.py:84} INFO - Retrieving connection 'minio_conn'
[2025-05-18T13:12:06.875+0000] {connection_wrapper.py:325} INFO - AWS Connection (conn_id='minio_conn', conn_type='aws') credentials retrieved from login and password.
[2025-05-18T13:12:09.070+0000] {test_car.py:51} INFO - Processing file: cars_20250518.csv
[2025-05-18T13:12:09.116+0000] {test_car.py:58} INFO - Read 10 records
[2025-05-18T13:12:09.121+0000] {test_car.py:62} INFO - Sample data: {'brand': {0: 'Toyota', 1: 'Honda', 2: 'BMW', 3: 'Mercedes', 4: 'Audi'}, 'model': {0: 'Camry', 1: 'Accord', 2: 'X5', 3: 'E-Class', 4: 'A6'}, 'engine_volume': {0: 2.5, 1: 1.5, 2: 3.0, 3: 2.0, 4: 2.0}, 'manufacture_year': {0: 2020, 1: 2021, 2: 2019, 3: 2022, 4: 2021}, 'price_foreign': {0: 25000, 1: 22000, 2: 45000, 3: 40000, 4: 38000}, 'file_actual_date': {0: '2025-05-15', 1: '2025-05-15', 2: '2025-05-15', 3: '2025-05-15', 4: '2025-05-15'}, 'processing_date': {0: <Proxy at 0x7f51bfd34c40 wrapping DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')) at 0x7f51bfc1a170 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7f51bfee7560>, 'execution_date', DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')))>, 1: <Proxy at 0x7f51bfd34c40 wrapping DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')) at 0x7f51bfc1a170 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7f51bfee7560>, 'execution_date', DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')))>, 2: <Proxy at 0x7f51bfd34c40 wrapping DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')) at 0x7f51bfc1a170 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7f51bfee7560>, 'execution_date', DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')))>, 3: <Proxy at 0x7f51bfd34c40 wrapping DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')) at 0x7f51bfc1a170 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7f51bfee7560>, 'execution_date', DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')))>, 4: <Proxy at 0x7f51bfd34c40 wrapping DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')) at 0x7f51bfc1a170 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7f51bfee7560>, 'execution_date', DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')))>}}
[2025-05-18T13:12:09.124+0000] {python.py:240} INFO - Done. Returned value was: [{'brand': 'Toyota', 'model': 'Camry', 'engine_volume': 2.5, 'manufacture_year': 2020, 'price_foreign': 25000, 'file_actual_date': '2025-05-15', 'processing_date': <Proxy at 0x7f51bfd34c40 wrapping DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')) at 0x7f51bfc1a170 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7f51bfee7560>, 'execution_date', DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')))>}, {'brand': 'Honda', 'model': 'Accord', 'engine_volume': 1.5, 'manufacture_year': 2021, 'price_foreign': 22000, 'file_actual_date': '2025-05-15', 'processing_date': <Proxy at 0x7f51bfd34c40 wrapping DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')) at 0x7f51bfc1a170 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7f51bfee7560>, 'execution_date', DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')))>}, {'brand': 'BMW', 'model': 'X5', 'engine_volume': 3.0, 'manufacture_year': 2019, 'price_foreign': 45000, 'file_actual_date': '2025-05-15', 'processing_date': <Proxy at 0x7f51bfd34c40 wrapping DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')) at 0x7f51bfc1a170 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7f51bfee7560>, 'execution_date', DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')))>}, {'brand': 'Mercedes', 'model': 'E-Class', 'engine_volume': 2.0, 'manufacture_year': 2022, 'price_foreign': 40000, 'file_actual_date': '2025-05-15', 'processing_date': <Proxy at 0x7f51bfd34c40 wrapping DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')) at 0x7f51bfc1a170 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7f51bfee7560>, 'execution_date', DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')))>}, {'brand': 'Audi', 'model': 'A6', 'engine_volume': 2.0, 'manufacture_year': 2021, 'price_foreign': 38000, 'file_actual_date': '2025-05-15', 'processing_date': <Proxy at 0x7f51bfd34c40 wrapping DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')) at 0x7f51bfc1a170 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7f51bfee7560>, 'execution_date', DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')))>}, {'brand': 'Kia', 'model': 'Optima', 'engine_volume': 2.4, 'manufacture_year': 2020, 'price_foreign': 18000, 'file_actual_date': '2025-05-15', 'processing_date': <Proxy at 0x7f51bfd34c40 wrapping DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')) at 0x7f51bfc1a170 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7f51bfee7560>, 'execution_date', DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')))>}, {'brand': 'Hyundai', 'model': 'Solaris', 'engine_volume': 1.6, 'manufacture_year': 2021, 'price_foreign': 15000, 'file_actual_date': '2025-05-15', 'processing_date': <Proxy at 0x7f51bfd34c40 wrapping DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')) at 0x7f51bfc1a170 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7f51bfee7560>, 'execution_date', DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')))>}, {'brand': 'Volkswagen', 'model': 'Tiguan', 'engine_volume': 2.0, 'manufacture_year': 2022, 'price_foreign': 30000, 'file_actual_date': '2025-05-15', 'processing_date': <Proxy at 0x7f51bfd34c40 wrapping DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')) at 0x7f51bfc1a170 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7f51bfee7560>, 'execution_date', DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')))>}, {'brand': 'Lexus', 'model': 'RX', 'engine_volume': 3.5, 'manufacture_year': 2021, 'price_foreign': 50000, 'file_actual_date': '2025-05-15', 'processing_date': <Proxy at 0x7f51bfd34c40 wrapping DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')) at 0x7f51bfc1a170 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7f51bfee7560>, 'execution_date', DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')))>}, {'brand': 'Ford', 'model': 'Focus', 'engine_volume': 1.5, 'manufacture_year': 2020, 'price_foreign': 16000, 'file_actual_date': '2025-05-15', 'processing_date': <Proxy at 0x7f51bfd34c40 wrapping DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')) at 0x7f51bfc1a170 with factory functools.partial(<function lazy_mapping_from_context.<locals>._deprecated_proxy_factory at 0x7f51bfee7560>, 'execution_date', DateTime(2025, 5, 18, 13, 12, 0, 431825, tzinfo=Timezone('UTC')))>}]
[2025-05-18T13:12:09.140+0000] {xcom.py:690} ERROR - Object of type DateTime is not JSON serializable. If you are using pickle instead of JSON for XCom, then you need to enable pickle support for XCom in your *** config or make sure to decorate your object with attr.
[2025-05-18T13:12:09.146+0000] {taskinstance.py:3311} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/json.py", line 92, in default
    return serialize(o)
           ^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/serialization/serde.py", line 190, in serialize
    raise TypeError(f"cannot serialize object of type {cls}")
TypeError: cannot serialize object of type <class 'Proxy'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 789, in _execute_task
    task_instance.xcom_push(key=XCOM_RETURN_KEY, value=xcom_value, session=session_or_null)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 3639, in xcom_push
    XCom.set(
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 166, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/xcom.py", line 249, in set
    value = cls.serialize_value(
            ^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/xcom.py", line 688, in serialize_value
    return json.dumps(value, cls=XComEncoder).encode("UTF-8")
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/json.py", line 105, in encode
    return super().encode(o)
           ^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/json/encoder.py", line 258, in iterencode
    return _iterencode(o, 0)
           ^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/json.py", line 94, in default
    return super().default(o)
           ^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DateTime is not JSON serializable
[2025-05-18T13:12:09.174+0000] {taskinstance.py:1225} INFO - Marking task as UP_FOR_RETRY. dag_id=test_task_car, task_id=process_file, run_id=manual__2025-05-18T13:12:00.431825+00:00, execution_date=20250518T131200, start_date=20250518T131206, end_date=20250518T131209
[2025-05-18T13:12:09.220+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2025-05-18T13:12:09.221+0000] {standard_task_runner.py:124} ERROR - Failed to execute job 19 for task process_file (Object of type DateTime is not JSON serializable; 2049)
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/json.py", line 92, in default
    return serialize(o)
           ^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/serialization/serde.py", line 190, in serialize
    raise TypeError(f"cannot serialize object of type {cls}")
TypeError: cannot serialize object of type <class 'Proxy'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/task/task_runner/standard_task_runner.py", line 117, in _start_by_fork
    ret = args.func(args, dag=self.dag)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/cli/cli_config.py", line 49, in command
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/cli.py", line 116, in wrapper
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/cli/commands/task_command.py", line 483, in task_run
    task_return_code = _run_task_by_selected_method(args, _dag, ti)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/cli/commands/task_command.py", line 256, in _run_task_by_selected_method
    return _run_raw_task(args, ti)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/cli/commands/task_command.py", line 341, in _run_raw_task
    return ti._run_raw_task(
           ^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 3005, in _run_raw_task
    return _run_raw_task(
           ^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 273, in _run_raw_task
    TaskInstance._execute_task_with_callbacks(
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 3159, in _execute_task_with_callbacks
    result = self._execute_task(context, task_orig)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 3183, in _execute_task
    return _execute_task(self, context, task_orig)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 789, in _execute_task
    task_instance.xcom_push(key=XCOM_RETURN_KEY, value=xcom_value, session=session_or_null)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 3639, in xcom_push
    XCom.set(
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 166, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/xcom.py", line 249, in set
    value = cls.serialize_value(
            ^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/xcom.py", line 688, in serialize_value
    return json.dumps(value, cls=XComEncoder).encode("UTF-8")
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/json.py", line 105, in encode
    return super().encode(o)
           ^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/json/encoder.py", line 258, in iterencode
    return _iterencode(o, 0)
           ^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/json.py", line 94, in default
    return super().default(o)
           ^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DateTime is not JSON serializable
[2025-05-18T13:12:09.261+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 1
[2025-05-18T13:12:09.306+0000] {taskinstance.py:3895} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2025-05-18T13:12:09.312+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
